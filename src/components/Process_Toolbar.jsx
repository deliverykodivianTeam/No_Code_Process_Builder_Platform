// Toolbar.jsx

import React from "react";

const Toolbar = ({
  toolboxPosition,
  isDragging,
  dragOffset,
  activeDrag,
  handleMouseDown,
  handleMouseMove,
  handleMouseUp,
  handleDragStart,
  handleConnectClick,
}) => {
  return (
    <div
      className="toolbox"
      style={{
        top: `${toolboxPosition.top}px`,
        left: `${toolboxPosition.left}px`,
        position: "absolute",
        cursor: isDragging ? "grabbing" : "grab",
        display: "flex",
        flexDirection: "column",
        alignItems: "center",
      }}
      onMouseDown={handleMouseDown}
    >
      <div className="toolbox-header">Drag Me</div>
      <div
        className="draggable start"
        draggable
        onDragStart={(e) => handleDragStart(e, "start")}
      >
        <svg width="48" height="48" viewBox="0 0 48 48">
          <path
            d="M45.5 24C45.5 36.4563 35.6207 46.5 23.5 46.5C11.3793 46.5 1.5 36.4563 1.5 24C1.5 11.5437 11.3793 1.5 23.5 1.5C35.6207 1.5 45.5 11.5437 45.5 24Z"
            fill="#B6FF42"
            stroke="white"
            strokeWidth="3"
          />
        </svg>
      </div>
      <div
        className="draggable activity"
        draggable
        onDragStart={(e) => handleDragStart(e, "activity")}
      >
        <svg
          width="44"
          height="43"
          viewBox="0 0 44 43"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M5.50024 2.69261C4.77086 2.69261 4.07136 2.97573 3.55561 3.47969C3.03986 3.98366 2.75012 4.66718 2.75012 5.37989C2.75012 6.0926 3.03986 6.77612 3.55561 7.28009C4.07136 7.78405 4.77086 8.06717 5.50024 8.06717C6.22961 8.06717 6.92912 7.78405 7.44487 7.28009C7.96061 6.77612 8.25036 6.0926 8.25036 5.37989C8.25036 4.66718 7.96061 3.98366 7.44487 3.47969C6.92912 2.97573 6.22961 2.69261 5.50024 2.69261ZM2.68917e-06 5.37989C-0.00132137 4.07083 0.486338 2.8063 1.37145 1.82364C2.25656 0.840983 3.47827 0.207766 4.80727 0.0428391C6.13627 -0.122088 7.48118 0.192616 8.58957 0.927881C9.69796 1.66315 10.4936 2.76842 10.8272 4.03625H33.1747C33.4174 3.11899 33.904 2.28073 34.585 1.60641C35.2661 0.932084 36.1175 0.445668 37.0529 0.196447C37.9884 -0.0527735 38.9746 -0.0559411 39.9117 0.187265C40.8488 0.430471 41.7034 0.911408 42.389 1.58134C43.0746 2.25127 43.5668 3.08639 43.8157 4.00207C44.0646 4.91775 44.0613 5.88145 43.8063 6.79551C43.5512 7.70957 43.0535 8.54151 42.3634 9.20702C41.6733 9.87254 40.8154 10.348 39.8767 10.5852V32.422C40.8154 32.6592 41.6733 33.1346 42.3634 33.8001C43.0535 34.4657 43.5512 35.2976 43.8063 36.2117C44.0613 37.1257 44.0646 38.0894 43.8157 39.0051C43.5668 39.9208 43.0746 40.7559 42.389 41.4258C41.7034 42.0958 40.8488 42.5767 39.9117 42.8199C38.9746 43.0631 37.9884 43.0599 37.0529 42.8107C36.1175 42.5615 35.2661 42.0751 34.585 41.4008C33.904 40.7264 33.4174 39.8882 33.1747 38.9709H10.8272C10.5845 39.8882 10.0979 40.7264 9.41686 41.4008C8.73579 42.0751 7.88439 42.5615 6.94896 42.8107C6.01353 43.0599 5.02729 43.0631 4.0902 42.8199C3.15311 42.5767 2.29847 42.0958 1.61287 41.4258C0.927272 40.7559 0.43509 39.9208 0.186197 39.0051C-0.062696 38.0894 -0.0594544 37.1257 0.195594 36.2117C0.450642 35.2976 0.948431 34.4657 1.63852 33.8001C2.32861 33.1346 3.18647 32.6592 4.12518 32.422V10.5852C2.94429 10.2872 1.89823 9.61421 1.15149 8.67195C0.404754 7.7297 -0.000307283 6.57164 2.68917e-06 5.37989ZM6.8753 10.5852V32.422C8.80863 32.9057 10.3294 34.3945 10.8272 36.2836H33.1747C33.4213 35.3542 33.9177 34.506 34.6125 33.827C35.3074 33.1481 36.1754 32.663 37.1266 32.422V10.5852C36.1754 10.3442 35.3074 9.85912 34.6125 9.18015C33.9177 8.50118 33.4213 7.65302 33.1747 6.72353H10.8272C10.5806 7.65302 10.0842 8.50118 9.38935 9.18015C8.69451 9.85912 7.82652 10.3442 6.8753 10.5852ZM38.5017 2.69261C37.7723 2.69261 37.0728 2.97573 36.557 3.47969C36.0413 3.98366 35.7515 4.66718 35.7515 5.37989C35.7515 6.0926 36.0413 6.77612 36.557 7.28009C37.0728 7.78405 37.7723 8.06717 38.5017 8.06717C39.231 8.06717 39.9305 7.78405 40.4463 7.28009C40.962 6.77612 41.2518 6.0926 41.2518 5.37989C41.2518 4.66718 40.962 3.98366 40.4463 3.47969C39.9305 2.97573 39.231 2.69261 38.5017 2.69261ZM5.50024 34.94C4.77086 34.94 4.07136 35.2231 3.55561 35.7271C3.03986 36.231 2.75012 36.9146 2.75012 37.6273C2.75012 38.34 3.03986 39.0235 3.55561 39.5275C4.07136 40.0314 4.77086 40.3146 5.50024 40.3146C6.22961 40.3146 6.92912 40.0314 7.44487 39.5275C7.96061 39.0235 8.25036 38.34 8.25036 37.6273C8.25036 36.9146 7.96061 36.231 7.44487 35.7271C6.92912 35.2231 6.22961 34.94 5.50024 34.94ZM38.5017 34.94C37.7723 34.94 37.0728 35.2231 36.557 35.7271C36.0413 36.231 35.7515 36.9146 35.7515 37.6273C35.7515 38.34 36.0413 39.0235 36.557 39.5275C37.0728 40.0314 37.7723 40.3146 38.5017 40.3146C39.231 40.3146 39.9305 40.0314 40.4463 39.5275C40.962 39.0235 41.2518 38.34 41.2518 37.6273C41.2518 36.9146 40.962 36.231 40.4463 35.7271C39.9305 35.2231 39.231 34.94 38.5017 34.94Z"
            fill="#808080" // Change fill to yellow
            stroke="white" // Add a white stroke
            strokeWidth="2" // Adjust stroke width as needed
          />
        </svg>
      </div>
      <div
        className="draggable end"
        draggable
        onDragStart={(e) => handleDragStart(e, "end")}
      >
        <svg width="48" height="48" viewBox="0 0 48 48">
          <path
            d="M45.5 24C45.5 36.4563 35.6207 46.5 23.5 46.5C11.3793 46.5 1.5 36.4563 1.5 24C1.5 11.5437 11.3793 1.5 23.5 1.5C35.6207 1.5 45.5 11.5437 45.5 24Z"
            fill="#FF8642"
            stroke="white"
            strokeWidth="3"
          />
        </svg>
      </div>
      <div
        className="draggable exclusive"
        draggable
        onDragStart={(e) => handleDragStart(e, "exclusive")}
      >
        <svg
          width="56"
          height="60"
          viewBox="0 0 56 60"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M24.3255 4.92734C26.3555 3.02422 29.6455 3.02422 31.6755 4.92734L54.478 26.308C56.508 28.2111 56.508 31.2922 54.478 33.192L31.6755 54.5727C29.6455 56.4758 26.359 56.4758 24.3325 54.5727L1.52298 33.1953C1.0402 32.7436 0.657182 32.2071 0.395849 31.6165C0.134516 31.0259 0 30.3927 0 29.7533C0 29.1139 0.134516 28.4807 0.395849 27.8901C0.657182 27.2994 1.0402 26.7629 1.52298 26.3113L24.3255 4.92734ZM29.2255 7.22422C28.9006 6.91965 28.4599 6.74855 28.0005 6.74855C27.541 6.74855 27.1004 6.91965 26.7755 7.22422L3.96948 28.6016C3.64461 28.9062 3.4621 29.3193 3.4621 29.75C3.4621 30.1807 3.64461 30.5938 3.96948 30.8984L26.7755 52.2791C27.1004 52.5836 27.541 52.7547 28.0005 52.7547C28.4599 52.7547 28.9006 52.5836 29.2255 52.2791L52.0315 30.8984C52.3563 30.5938 52.5389 30.1807 52.5389 29.75C52.5389 29.3193 52.3563 28.9062 52.0315 28.6016L29.2255 7.22094V7.22422Z"
            fill="#3F51B5"
          />
        </svg>
      </div>
    </div>
  );
};

export default Toolbar;
